services:
    nginx:
        build:
            context: ./srcs/requirements/nginx
            args:
                INTRA_LOGIN: ${INTRA_LOGIN}
        ports:
            - "443:443"
        environment:
            - DOMAIN_NAME
        volumes:
            - wordpress_data:/var/www/html/wordpress/public_html
        networks:
            - internal
        restart:  on-failure

    mariadb:
        build:
            context: ./srcs/requirements/mariadb
            args:
                MYSQL_USER: ${MYSQL_USER}
                MYSQL_PASSWORD: ${MYSQL_PASSWORD}
                MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        volumes:
            - mariadb_data:/var/lib/mysql
        environment:
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_ROOT_PASSWORD
        networks:
            - internal
        restart:  on-failure

    wordpress:
        build:
            context: ./requirements/wordpress
            args:
                DOMAIN_NAME: ${DOMAIN_NAME}
        volumes:
            - wordpress_data:/var/www/html/wordpress/public_html
        environment:
            - DOMAIN_NAME
            - MYSQL_USER
            - MYSQL_PASSWORD
            - WORDPRESS_ADMIN_USER
            - WORDPRESS_ADMIN_PASSWORD
            - WORDPRESS_ADMIN_EMAIL
            - WORDPRESS_USER
            - WORDPRESS_PASSWORD
            - WORDPRESS_EMAIL
        networks:
            - internal
        depends_on:
            - nginx
            - mariadb
        restart:  on-failure

volumes:
    wordpress_data:
        name: wordpress_data
        driver: local
        driver_opts:
            type: none
            device: /home/ommohame/data/wordpress
            o: bind
    mariadb_data:
        name: mariadb_data
        driver: local
        driver_opts:
            type: none
            device: /home/ommohame/data/mariadb
            o: bind

networks:
    internal:
        driver: bridge
